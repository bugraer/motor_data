#include "stm32f4xx.h"

unsigned int adc;
float hiz, akim;
int i=0, ih, ia;
int i, j;

void EXTI0_IRQHandler(){
	EXTI->PR |= EXTI_PR_PR0;	
	hiz++;
  adc=ADC1->DR;
  akim= ((float)adc/4095)*3;  
}
void delay(int x){
for(int a=0;a<1000;a++);
}
int main(){
	
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN |	RCC_AHB1ENR_GPIODEN;
	
	RCC->APB1ENR |= RCC_APB1ENR_TIM3EN; // TIM3ENABLE
	
	RCC->APB1ENR |= RCC_APB1ENR_USART2EN;
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN;
	GPIOA->MODER |= GPIO_MODER_MODE2_1;
	
	GPIOA->MODER &= ~ GPIO_MODER_MODER0_0 | GPIO_MODER_MODER0_1;
	GPIOA->MODER |= GPIO_MODER_MODER0_0 | GPIO_MODER_MODER0_1;
	RCC->APB2ENR |= RCC_APB2ENR_ADC1EN;  //ADC BUSS PA0 ANALOG GIRIS
  ADC1->CR2 |= ADC_CR2_ADON;
  ADC1->CR2 |=ADC_CR2_CONT;
  ADC1->CR2 |= ADC_CR2_SWSTART;
	adc=ADC1->DR;

	GPIOA->MODER |= GPIO_MODER_MODE2_1; //Tx PA2 USART1
	GPIOB->MODER |= GPIO_MODER_MODE9_1;	//Tx PB6 USART1
	
	EXTI->IMR |= EXTI_IMR_IM0;
	EXTI->RTSR |= EXTI_RTSR_TR0;
	
	SYSCFG->EXTICR[0] &= ~SYSCFG_EXTICR1_EXTI0;
	
	NVIC_EnableIRQ(EXTI0_IRQn); //EXTI0_IRQn=6
	
	GPIOA->AFR[0] |= GPIO_AFRL_AFSEL2_2 | GPIO_AFRL_AFSEL2_1 | GPIO_AFRL_AFSEL2_0;
	GPIOB->AFR[0] |= GPIO_AFRL_AFSEL2_2 | GPIO_AFRL_AFSEL2_1 | GPIO_AFRL_AFSEL2_0;
	
	USART2->BRR =  0x683U; //9600
	USART1->BRR =  0x683U; //9600
	USART2->CR1 |= USART_CR1_UE;
	USART2->CR1 |= USART_CR1_TE;
	USART1->CR1 |= USART_CR1_UE;
	USART1->CR1 |= USART_CR1_TE;
	
	while(1){
		while(!(ADC1->SR & ADC_SR_EOC));
			
		if(j%2==0){
			adc=ADC1->DR;
			hiz= ((float)adc/4096)*3;
			ia = hiz;
			USART2->DR=ia;
			while(!(USART2->SR & USART_SR_TXE));
			while(!(USART2->SR & USART_SR_TC));
		}else{
			ih= akim;
			USART1->DR=ih;
			while(!(USART1->SR & USART_SR_TXE));
			while(!(USART1->SR & USART_SR_TC));
}
}
}
